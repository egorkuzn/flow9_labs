// Кузнецов Егор, НГУ, 2022
// 4) Дан массив целых чисел [n_1,...,n_k] и число m.
// Найти все пары индексов (i, j) такие, что n_i + n_j == m.
// Сигнатура функции: inds(a : [int], m : int) -> [Pair<int, int>].
// Усложнение: сделать эту функцию сложности O(n log(n)), а не O(n^2).
// Использовать функции: foldi, makeTree, setTree, lookupTree.
import ds/tree;
import ds/array;

inds(int_array : [int], m : int) -> [Pair<int, int>];
elemPairs(ind : [int], i : int) -> [Pair<int, int>];

main(){
    int_array = [1, 1, 1, 1, 1, 1];
    m = 2;
    println(inds(int_array, m));
}

elemPairs(ind, i){
    new_array: ref [Pair<int, int>] = ref [];

    map(ind, \value -> {
        if(i < value){
            new_array := concat(^new_array, [Pair(i, value)]);
        }

        value;
    })

    ^new_array;
}

inds(int_array, m){
    tree = foldi(int_array, makeTree(), \i, t,
            value -> setTree(t, value, arrayPush(getTreeArrayValue(t, value), i)));
    foldi(int_array, [], \i, pairs_array : [Pair<int, int>], elem ->
        switch (lookupTree(tree, m - elem)){
            Some(ind) : concat(pairs_array, elemPairs(ind, i));
            None() : pairs_array;
        });
}
